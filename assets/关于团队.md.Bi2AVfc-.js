import{_ as r,c as o,o as a,ag as n}from"./chunks/framework.QVwUS1Pj.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"关于团队.md","filePath":"关于团队.md"}'),e={name:"关于团队.md"};function s(l,t,p,i,g,_){return a(),o("div",null,t[0]||(t[0]=[n('<h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>如果几个人，走在一起，也有共同的目标，但是彼此之间不协作，那是不能称之为团队的，只能称他们为群体。对团队的理解比较深的，当属Netflix(网飞)公司：</p><blockquote><p>你耽误别人夺锦标(目标达成)了，那不好意思，我要砸你的饭碗。</p></blockquote><p>这段话白话一点讲就是，团队是有目标的，而这个目标是需要大家合作，也即是协同，才能做到的。你老耽误别人，那只好请你离开。</p><p><strong>协作</strong>对于团队来说是非常重要的，因为能产生1+1大于2的效果，就算团队里只是一两个高手加上几个合适的人，配合好的话，也是能极大的提高团队产出的。</p><p><strong>团队的定义</strong>：有目标且彼此协作的一群人。</p><p>一切的团队建设要围绕如何达到目标来展开，无论你是给团队指派技术领导者，还是招聘，还是培养人才等，都是围绕如何达到目标来操作的，下面具体展开讲一下。</p><h2 id="调整技术团队的结构" tabindex="-1">调整技术团队的结构 <a class="header-anchor" href="#调整技术团队的结构" aria-label="Permalink to &quot;调整技术团队的结构&quot;">​</a></h2><p>关于团队结构，我之前在 技术经理成长复盘-聊聊核心骨干有描述过，团队要有<strong>核心骨干和辅助者</strong>，这样才是健康的结构。同时也提到了，核心骨干要能管事，并用事情让其他组员协助一起去做。要做到这一点，团队的领导者必须有调整团队结构的权力和能力。什么是合适的人，什么是优秀的人，什么是需要淘汰的人，心里一定要清楚。</p><ul><li><strong>换血</strong>，现有团队的人，不胜任又或者无论如何努力学习和培养，能力都是达不到的，那不要心慈手软，必须换血，降低管理成本；</li><li><strong>招聘</strong>，通过招聘引入能匹配岗位职责的人进来；</li><li><strong>培养</strong>，经过一轮换血和招聘后，你认为当前的团队的人，都是合适的了，那就需要开始培养了。关于培养，我总结了一条经验：大方向你知道事情应该如何做，然后委托出去，并采用事前、事中、事后的跟踪方式。这样组员既可以放手去干，得到历练，而你也不用太担心事情会失控。</li></ul><p>团队结构调整好了，才会开始有战斗力，才能去打更多更大型的硬战。这里我举一下最近的一个例子。最近公司的业务大项目非常多，相当于一部分团队都有点受不了，一个字，累，累完后，面对又是一个一个的需求。而我这边的团队则相对来说，好很多。就是因为团队的结构设计的还比较合理，团队里有几个能扛事的骨干，而辅助者的综合实力也都不错，也能配合的起来，需求处理的吞吐量自然就会大很多。</p><p>另外好的团队结构还有个非常大的好处，就是规避人员变动风险，团队就一个牛人，其他都一般，牛人一走，就麻烦了。因此团队是否有好的结构是除了团队领导者要考虑问题之外，也是团队领导者的上级要去考虑的问题。努力打造好的团队结构是对自己负责、对团队负责、对上级负责，对上级的上级负责，对公司负责的一种表现。</p><h2 id="技术团队的领导者" tabindex="-1">技术团队的领导者 <a class="header-anchor" href="#技术团队的领导者" aria-label="Permalink to &quot;技术团队的领导者&quot;">​</a></h2><p>就像赛龙舟一样，得有控制节奏和鼓舞士气的鼓手、控制方向的舵手以及力气大的划手，大家紧密配合才能提高龙舟的速度。用龙舟做比喻的话，领导者到底是舵手还是鼓手呢？两个答案都不够好，领导力大师彼得·圣吉提出，龙舟的领导者<strong>首先得是</strong>一个设计师。他给出的理由是，<strong>如果船本身设计就有问题，船上哪个角色无论他多么的厉害，都是没有用的</strong>。</p><p>那领导者作为设计师具体应该设计什么呢？</p><ul><li><strong>设计目标</strong>，这个是最为最为重要的，你作领导者一定要有长期的目标和规划，并对上对齐好，再与组员对齐。告诉大家，这就是我们的重点。有无正确的目标和规划，在根本上决定了做事的效率以及团队的产出。</li><li><strong>设计团队结构</strong>，这个在上面已有说明，骨干和辅助者，不然硬战你打不了的；</li></ul><p>上面两点是最重要的，至于做事流程设计的，这个看公司阶段的，如果技术团队都已经超过100人了，就需要好好的去考虑流程的问题，让大家做事的时候，<strong>有流程可依</strong>，减少一些没必要的沟通。另外超过100人，其实已经开始具备规模化效应，搞点流程或者工具，如果真的有效，很容易就会扩散到整个团队，提高整个团队的效率。当然这个的前提是，得有真的懂这些的高手在公司里，不然也是白搭。</p><p>那么领导者除了是一个设计师之外，还应该是什么呢？老师和服务者，<strong>作为老师</strong>，教导技术不是最重要的，而是教<strong>认知</strong>，你需要把你是怎么想这个事情的，以及为啥这样做会更好更全面更有效率，明确的告诉组员，打开组员的思路。<strong>作为服务者</strong>，当团队结构调整好了，组员认知也提升了，那个时候，你就可以做为一个服务者，服务组员，并告知组员，你是他们最好的帮手，有事请说。</p><h2 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h2><p>当你觉得团队的产出并不是那么高的时候，请先从自己本身出发，看看是不是自己没有设计好团队目标，当目标有了，执行有问题了，那就需要去调整团队结构和提高组员的认知。</p>',20)]))}const h=r(e,[["render",s]]);export{d as __pageData,h as default};
