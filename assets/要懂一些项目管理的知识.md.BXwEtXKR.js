import{_ as l,c as a,o,ae as t}from"./chunks/framework.Dh1jimFm.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"要懂一些项目管理的知识.md","filePath":"要懂一些项目管理的知识.md"}'),p={name:"要懂一些项目管理的知识.md"};function i(r,e,c,u,n,_){return o(),a("div",null,e[0]||(e[0]=[t('<h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>在创业公司里，技术经理有时候也是需要去承当其他角色的责任的，比如说：</p><blockquote><p>业务架构师 应用架构师 Leader Owner 项目经理</p></blockquote><p>为什么呢？因为好多互联网创业公司里，上面提到的角色是可能没有专职的，技术经理就是啥都要干的。而另外一种情况是，公司里承担这些角色的人做的不好或者由于并行的项目实在太多，这些角色无法同时处理好。</p><p>技术经理去做项目管理的事情，是很难避免的，所以你还是得掌握一些项目管理的知识的。</p><h2 id="学习项目管理知识的重要性" tabindex="-1">学习项目管理知识的重要性 <a class="header-anchor" href="#学习项目管理知识的重要性" aria-label="Permalink to &quot;学习项目管理知识的重要性&quot;">​</a></h2><p>除了知道技术经理懂一些项目管理的知识是工作需要之外，还得有一个认知：</p><blockquote><p>项目管理能力是一项 横向能力 ,对于想走技术管理岗的人来说，是一项必备的能力。</p></blockquote><p>走技术管理路线的人，个人认为需要走下面几个步骤：</p><blockquote><p>偏执行 --&gt; 管事(Leader 或者 Owner) --&gt; 管人</p></blockquote><ul><li>偏执行，可以先不用管其他事情，任务分配下来后，按照需求如期交付即可；</li><li>管事，管好自己的事情，还能协调好周围的人和事，按时按质交付项目；</li><li>管人，做人员管理的 manager，上面两个步骤都做的不错了，才开始考虑让你管人。</li></ul><p>直接从执行跃迁到管事或者从管事跃迁到管人，都是不太建议的，很容易造成不适应和冲突，或者做的不好，直接打击到当事人的自信心了。因此要一步一步的来，想做技术管理的，先把管事这个技能练习好了再说，不要心急。作为一个技术经理，项目管理做的很差的话，老是出现各种风险，导致无法如期交付，那是经常会被老板骂的,那就别谈什么晋升加薪了，饭碗能否保住，都还是个问题。如果你当前已经是一个技术经理，而项目管理能力还很差，那就得赶紧去补补相关的知识了。</p><h2 id="客户呀客户-你要干嘛" tabindex="-1">客户呀客户，你要干嘛 <a class="header-anchor" href="#客户呀客户-你要干嘛" aria-label="Permalink to &quot;客户呀客户，你要干嘛&quot;">​</a></h2><p>项目管理中，最有挑战的地方，就是客户管理。需求来自客户，在互联网公司里，大部分情况下，这些客户包括：</p><blockquote><p>CEO,我有个想法； CTO，我有个大的技术决策； 业务方，为了提升品牌、营收、用户体验、降低客诉等，我有这样的需求； 产品经理，产品经理可以有自己的 IDEA，需求未必来自业务方； 技术领导，技术优化项目。</p></blockquote><p>这些客户都想立项，请问你应该如何处理？下面三件事情没搞清楚，不要立项。</p><p>要解决哪一类的问题，如何判断已经做到了,是想解决客诉问题还是提升品牌势能，用什么样的的数据就知道已经达到目标了，一定要清晰可量化。有人可能会抬杠，某某项目就是试验性的项目，大老板一个想法，试试水而已，不好用数据去证明。通常我都是这么怼回去的：</p><blockquote><p>就因为是试验性项目，才更需要知道成功与失败的定义，才能知道是否要继续进行下去。最差的情况，你可以用访谈的方式去拿到数据。</p></blockquote><p>质量、范围、时间哪个维度是项目发起人最看重的，有些东西是要提前发布抢占市场的，当然就是快，还谈什么做多少东西，质量多高之类的，赶紧给我上。而有些真的是要求质量的，例如核心模块重构的，绝对不能出事。因此一定要问清楚的，如果老板的预期是快，当项目出现风险的时候，你才能有决策，要牺牲哪些东西。</p><p>需要依赖其他职能团队的，需要得到对方明确的承诺，会配合一起搞。如果对方没明确承诺，那就让项目启动者事先去协调。</p><p>上面三个都有了，才立项。本质上其实是客户管理。</p><h2 id="项目计划只是手段-交付才是目的" tabindex="-1">项目计划只是手段，交付才是目的 <a class="header-anchor" href="#项目计划只是手段-交付才是目的" aria-label="Permalink to &quot;项目计划只是手段，交付才是目的&quot;">​</a></h2><p>项目计划是用于集体对焦的，正所谓按照计划行事，因此它是非常重要的，如果连计划都没有，那就是项目经理严重失职了。计划的制定，是项目经理推动去完成的，而不是项目经理自己去做的，项目经理做不了的。一份计划的输出需要借助如下角色：</p><ul><li>产品经理，基于明确的项目目标下，制定合适的里程碑；</li><li>开发人员，任务拆分以及梳理出任务与任务之间的依赖关系和填写开发工时；</li><li>测试人员，针对里程碑和任务，给出测试计划以及测试策略(例如：哪些模块应该优先提测)</li></ul><p>项目经理盯着这份计划即可，看看执行的过程中是否风险即可。但是这里需要特别强调一件事情：</p><blockquote><p>项目计划只是手段，按时交付才是目的。</p></blockquote><p>按时交付才是最终的目的，虽然我们需要严肃严格的去按照计划执行，但是很难避免中间出现了意外，比如说，有人必须请长假、某个功能遗漏了等，这个时候，作为项目经理千万不要因为没按照项目计划走，就开始紧张自乱阵脚，你的脑子里应该只有一个想法：</p><blockquote><p>快速做出调整。</p></blockquote><p>是加班、加入还是说需求能小刀一下，砍掉一点。</p><ul><li>加班，这个的话，得看情况的，可能开发人员本身的工作量已经非常饱和了，加班的话，可能会有反效果；</li><li>加入，派高手来救火；</li><li>砍需求，如果加班、加入都实在搞不定了，就只能按照我上面提到的清楚项目启动者的预期后，进行决策，能先不做哪一部分。</li></ul><p>有人可能会问，为啥要这么拼呀，我想说：</p><blockquote><p>交付是一种承诺，如果动不动就延期，会促进这种风气的生成，很不好。另外对于项目经理而言，不能交付，就等于没了饭碗了，真的。</p></blockquote><h2 id="项目执行" tabindex="-1">项目执行 <a class="header-anchor" href="#项目执行" aria-label="Permalink to &quot;项目执行&quot;">​</a></h2><p>有了项目计划后，剩下的就是执行了，下面列举一下小技巧。</p><ul><li>要有每日目标，今天的目标是什么，明天的目标是什么，要清楚；</li><li>开发提测的质量要高，才能更好的降低测试人员的工作量；</li><li>产品经理提前介入验收，尽快的提前发现问题；</li><li>BUG 日清，尤其是严重的 BUG；</li><li>加班，必须有明确的加班目标；</li></ul>',35)]))}const s=l(p,[["render",i]]);export{h as __pageData,s as default};
